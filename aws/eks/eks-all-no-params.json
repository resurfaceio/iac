{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploys a single-node EKS cluster with VPC, and installs Graylog API Security Helm chart. Installation details are stored in an S3-hosted static website.",
  "Parameters": {
    "EKSClusterName": {
      "Type" : "String",
      "Description" : "Enter a name for your EKS cluster. Default is cf-graylog-apisec",
      "Default" : "cf-graylog-apisec"
    },
    "VPCAddressBlock": {
      "Type": "String",
      "Default": "10.10.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "Description": "Enter a CIDR block for the new VPC. Default is 10.10.0.0/16",
      "ConstraintDescription": "Must be a valid CIDR of the form x.x.x.x/x"
    }
  },
  "Resources": {
    "EKSClusterRole": {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                  "Service": [
                      "eks.amazonaws.com"
                  ]
              },
              "Action": [
                  "sts:AssumeRole"
              ]
            }
          ]
        },
        "Description" : "IAM Role for EKS cluster",
        "ManagedPolicyArns" : [
          "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
          "arn:aws:iam::aws:policy/AmazonEKSLocalOutpostClusterPolicy",
          "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
          "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
          "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        ],
        "RoleName" : "CFEKSClusterRole",
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ]
      }
    },
    "EKSNodeRole": {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" :  {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                  "Service": [
                      "ec2.amazonaws.com"
                  ]
              },
              "Action": [
                  "sts:AssumeRole"
              ]
            }
          ]
        },
        "Description" :"IAM Role for EKS Node group",
        "ManagedPolicyArns" : [
          "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
          "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        ],
        "RoleName" : "CFEKSNodeRole",
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ]
      }
    },
    "VPC": {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref": "VPCAddressBlock" },
        "EnableDnsHostnames" : true,
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ]
      }
    },
    "Subnet1": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        "CidrBlock" : { "Fn::Select" : [ "0", { "Fn::Cidr" : [ { "Ref": "VPCAddressBlock" } , 3, 12] } ] },
        "MapPublicIpOnLaunch" : true,
        "PrivateDnsNameOptionsOnLaunch": {
          "EnableResourceNameDnsAAAARecord" : false,
          "EnableResourceNameDnsARecord" : false,
          "HostnameType" : "ip-name"
        },
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ],
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "InternetGateway": {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ]
      }
    },
    "GatewayAttachment": {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref": "InternetGateway"},
        "VpcId" : { "Ref": "VPC" }
      }
    },
    "RouteTable": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ],
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "GatewayAttachment",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTable" },
        "GatewayId": { "Ref":  "InternetGateway" },
        "DestinationCidrBlock": "0.0.0.0/0"
      }
    },
    "RouteTableAssociation1": {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "SubnetId" : { "Ref" : "Subnet1" }
      }
    },
    "Cluster": {
      "Type" : "AWS::EKS::Cluster",
      "Properties" : {
        "AccessConfig" : {
          "AuthenticationMode" : "API_AND_CONFIG_MAP"
        },
        "Name" : { "Ref": "EKSClusterName" },
        "ResourcesVpcConfig" : {
          "EndpointPrivateAccess" : false,
          "EndpointPublicAccess" : true,
          "SubnetIds" : [ { "Ref" : "Subnet1" } ]
        },
        "RoleArn" : {"Fn::GetAtt" : ["EKSClusterRole", "Arn"] },
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ],
        "Version" : "1.29"
      }
    },
    "Nodes": {
      "Type" : "AWS::EKS::Nodegroup",
      "DependsOn": [ "Cluster" ],
      "Properties" : {
        "ClusterName" : { "Ref": "EKSClusterName" },
        "DiskSize" : 20,
        "AmiType": "AL2_ARM_64",
        "InstanceTypes" : "m7g.2xlarge",
        "NodegroupName" : { "Fn::Join": ["-", [ { "Ref": "EKSClusterName" }, "nodes" ]] },
        "NodeRole" : {"Fn::GetAtt" : ["EKSNodeRole", "Arn"] },
        "ScalingConfig" : {
          "DesiredSize" : 1,
          "MaxSize" : 1,
          "MinSize" : 0
        },
        "Subnets" : [ { "Ref" : "Subnet1" } ]
      }
    },
    "VpcCni": {
      "Type" : "AWS::EKS::Addon",
      "DependsOn": [ "Cluster", "Nodes" ],
      "Properties" : {
        "AddonName" : "vpc-cni",
        "AddonVersion" : "v1.16.0-eksbuild.1",
        "ClusterName" : { "Ref": "EKSClusterName" },
        "PreserveOnDelete" : false,
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ]
      }
    },
    "CoreDNS": {
      "Type" : "AWS::EKS::Addon",
      "DependsOn": [ "Cluster", "Nodes" ],
      "Properties" : {
        "AddonName" : "coredns",
        "AddonVersion" : "v1.11.1-eksbuild.4",
        "ClusterName" : { "Ref": "EKSClusterName" },
        "PreserveOnDelete" : false,
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ]
      }
    },
    "EbsCsi": {
      "Type" : "AWS::EKS::Addon",
      "DependsOn": [ "Cluster", "Nodes" ],
      "Properties" : {
        "AddonName" : "aws-ebs-csi-driver",
        "AddonVersion" : "v1.28.0-eksbuild.1",
        "ClusterName" : { "Ref": "EKSClusterName" },
        "PreserveOnDelete" : false,
        "Tags" : [ {
          "Key": "Demo",
          "Value": "Graylog API Security"
        } ]
      }
    },
    "HelmStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": [ "Cluster", "Nodes", "EbsCsi", "VPC", "Subnet1" ],
      "Properties": {
        "TemplateURL": "https://apisec-cf-templates.s3.amazonaws.com/eks/nested/ec2-chart-installer.json",
        "Parameters": {
          "VPC": { "Ref": "VPC" },
          "VPCSubnet": { "Ref": "Subnet1" },
          "EKSClusterName": { "Ref": "EKSClusterName" },
          "S3BucketName": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, { "Fn::Select" : [ "0", { "Fn::Split": [ "-", { "Fn::Select" : [ "2", { "Fn::Split": [ "/", { "Ref": "AWS::StackId" } ] } ] } ] } ] } ] ] }
        }
      }
    }
  },
  "Outputs": {
    "ClusterName": {
      "Description": "Name of your EKS cluster. Connect to it to run helm commands from your terminal using the aws cli: aws eks update-kubeconfig --name <ClusterName>",
      "Value": { "Ref": "EKSClusterName" }
    },
    "SuccessURL": {
      "Description": "Graylog API Security post-installation notes. Includes the web UI access URL, DB capture URL, and kubeconfig file.",
      "Value": { "Fn::GetAtt": [ "HelmStack", "Outputs.SuccessURL"] }
    }
  }
}
